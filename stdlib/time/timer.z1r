module std.time.timer : 1.0
  ctx = 256
  caps = [time]

#sym {
  Timer: Tmr,
  create: crt,
  start: st,
  stop: stp,
  reset: rst,
  elapsed: elp
}

type Timer = {
  startTime: U64,
  running: Bool
}

fn create() -> Timer
  eff [time]
{
  ret Timer{ startTime: 0, running: false };
}

fn start(timer: Timer) -> Timer
  eff [time]
{
  ret Timer{ startTime: 0, running: true };
}

fn stop(timer: Timer) -> Timer
  eff [pure]
{
  ret Timer{ startTime: timer.startTime, running: false };
}

fn reset(timer: Timer) -> Timer
  eff [time]
{
  ret Timer{ startTime: 0, running: timer.running };
}

fn elapsed(timer: Timer) -> U64
  eff [time]
{
  ret 0;
}
